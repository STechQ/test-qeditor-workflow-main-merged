!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>n});const o=async function(){}.constructor,n=async e=>{const t=Object.create(null),n=e.flow.getWorkflow(),r=e.flow.getServer(),i=e.flow.getClient();let l=!1;const p={permanentStore:()=>({set:async(e,t)=>{if(i)throw new Error("Not Implemented: permanentStore is not implemented yet on client.");if(r)throw new Error("Not Implemented: permanentStore is not implemented yet on server.");if(!n)throw new Error("permanent store can be executed only on workflow environment");await n.workflowDb().permanentStore.set(e,t)},get:async e=>{if(i)throw new Error("Not Implemented: permanentStore is not implemented yet on client.");if(r)throw new Error("Not Implemented: permanentStore is not implemented yet on server.");if(!n)throw new Error("permanent store can be executed only on workflow environment");return await n.workflowDb().permanentStore.get(e)}}),request:()=>{if(r)throw new Error("Not Implemented: server request is not implemented yet.");if(!n)throw new Error("request can only be used on SERVER or WORKFLOW");return n.request()},context:function(){if(n)return{type:"workflow",...n.context()};if(i)return{type:"client"};if(r)return{type:"server"};throw new Error("WTF: where are you executing this flow ???")}()};e.props.waitTillNext&&(p.next=()=>{l||(l=!0,e.flow.next())});const{msg:s}=e,{input:f,output:c,context:a,constants:w,constantsWId:u}=s,m=[f,c,a];let d=e.props.code;d+="\n return output;";const y=o("window","global","globalThis","entryInfo","input","output","context","state","flow","document","XMLHttpRequest","fetch","setInterval","navigator",d).apply(t,[t,t,t,e.entryInfo,...m,e.state,p,void 0,void 0,void 0,void 0,void 0]);if(!p.next){const t=await y;s.output=t,e.flow.next()}};return t})()));
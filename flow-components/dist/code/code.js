!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>n});const o=async function(){}.constructor,n=async e=>{const t=Object.create(null);let n=!1;const r={db:()=>{const t=e.flow.getWorkflow();if(!t)throw new Error("db can only be used on workflow");return t.db()},request:()=>{const t=e.flow.getWorkflow();if(e.flow.getServer())throw new Error("Not Implemented: server request is not implemented yet.");if(!t)throw new Error("db can only be used on SERVER or WORKFLOW");return t.request()}};e.props.waitTillNext&&(r.next=()=>{n||(n=!0,e.flow.next())});const l=e.msg||t,s=l,f=Object.keys(l),c=f.map((e=>s[e]?s[e]:void 0));let d=e.props.code;d+="\n return output;";const i=o("window","global","globalThis","entryInfo",...f,"state","flow","document","XMLHttpRequest","fetch","setInterval","navigator",d).apply(t,[t,t,t,e.entryInfo,...c,e.state,r,void 0,void 0,void 0,void 0,void 0]);if(!r.next){const t=await i;l.output=t,e.flow.next()}};return t})()));